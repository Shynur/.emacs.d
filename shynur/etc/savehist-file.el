;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(query-replace-history read-expression-history sly-inferior-lisp-program-history file-name-history empty-history minibuffer-history yes-or-no-p-history extended-command-history coding-system-history swiper-history buffer-name-history))
(setq query-replace-history '("Maple Mono SC NF" "Open Sans"))
(setq sly-inferior-lisp-program-history '("d:/Progs/Steel_Bank_Common_Lisp/sbcl.exe"))
(setq file-name-history '("d:/Desktop/Shynur.GitHub.iO/Categories/LeetCode/0.md" "~/AppData/Roaming/Typora/themes/github_maple.css" "~/AppData/Roaming/Typora/themes/github.css" "d:/Desktop/schoolwork/ai/10215102427-谢骐-1.md" "d:/Desktop/schoolwork/ai/2.1.el" "d:/Desktop/schoolwork/ai/2.el"))
(setq minibuffer-history '("cl-loop" "cl-pushnew" "cl-labels" "cl-defun" "cl-return" "cl-dolist" "minibuffer-message-timer" "minibuffer-message-timeout" "eval-expression-debug-on-error" "debug-on-quit" "debug-on-error" "natnump" "seq-difference" "sort" "cl-first" "floor" "sqrt" "nth" "not" "length" "mod" "zerop" "cl-flet" "perfect square" "list" "sequence" "funcall" "defun" "add-to-list" "first-error" "iter-do" "lexical-binding" "mouse-save-then-kill" "delete-trailing-lines" "kill-ring-max"))
(setq yes-or-no-p-history '("yes"))
(setq extended-command-history '("eval-buffer" "ielm" "delete-trailing-whitespace" "revert-buffer" "sly" "elisp-enable-lexical-binding" "ielm-return-for-effect" "rainbow-delimiters-mode" "ielm-return" "eval-print-last-sexp" "shortdoc-display-group" "whitespace-cleanup" "delete-whitespace-rectangle"))
(setq coding-system-history '("gb18030" "utf-8-unix"))
(setq swiper-history '(#("wrap" 0 4 (ivy-index 0)) #("282          word-wrap: break-word;" 0 1 (swiper-line-number 282) 5 13 (fontified t) 13 22 (fontified t face css-property) 22 35 (fontified t)) "cl-macs" "message" #("pid" 0 3 (ivy-index 1)) #("229                                                     ,(emacs-pid)" 0 1 (swiper-line-number 229) 5 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-8-face)) 58 67 (fontified t) 67 68 (fontified t face (rainbow-delimiters-depth-8-face))) #("provide" 0 7 (ivy-index 1)) #("74   ;;  * Moved `provide' forms down to ends of files." 0 1 (swiper-line-number 74) 5 9 (face font-lock-comment-delimiter-face fontified t) 9 18 (face font-lock-comment-face fontified t) 18 25 (face (font-lock-constant-face font-lock-comment-face) fontified t) 25 55 (face font-lock-comment-face fontified t)) #("map" 0 3 (ivy-index 0)) #("156  Mapping Over Lists" 0 1 (swiper-line-number 156) 5 23 (shortdoc-section t face shortdoc-heading)) #("number" 0 6 (ivy-index 0)) #("18   (number-sequence from &optional to inc)" 0 1 (swiper-line-number 18) 5 6 (shortdoc-function number-sequence face shortdoc-section) 6 21 (button (t) category default-button face (button shortdoc-section) action #[257 "\301\300\302\"\207" [number-sequence info-lookup-symbol emacs-lisp-mode] 4 "

(fn _)"] follow-link t help-echo "mouse-1, RET: show function's documentation in the Info manual") 21 22 (face shortdoc-section) 22 26 (face shortdoc-section) 26 27 (face shortdoc-section) 27 36 (face shortdoc-section) 36 37 (face shortdoc-section) 37 39 (face shortdoc-section) 39 40 (face shortdoc-section) 40 43 (face shortdoc-section) 43 44 (face shortdoc-section)) #("intersection" 0 12 (ivy-index 2)) #("8708             (seq-intersection [2 3 4 5] [1 3 5 6 7])" 0 1 (swiper-line-number 8708) 7 57 (fontified t)) #("23     " 0 1 (ivy-index 22 swiper-line-number 23) 1 7 (ivy-index 22)) #("crux" 0 4 (ivy-index 0)) #("80                                                  crux" 0 1 (swiper-line-number 80) 5 56 (fontified t)) #("lex" 0 3 (ivy-index 1)) #("84    '(lexical-binding t)" 0 1 (swiper-line-number 84) 5 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-2-face)) 8 25 (fontified t) 25 26 (fontified t face (rainbow-delimiters-depth-2-face))) "tool" "save-p" "-tab" #("delete-tr" 0 9 (ivy-index 0)) #("185   '(delete-trailing-lines" 0 1 (swiper-line-number 185) 5 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-2-face) fontified t) 8 29 (fontified t)) "kill-r" #("gb" 0 2 (ivy-index 0)) #("175                                    \"Chinese-GB18030\")" 0 1 (swiper-line-number 175) 5 39 (fontified t) 39 56 (face font-lock-string-face fontified t) 56 57 (face (rainbow-delimiters-depth-4-face) fontified t))))
(setq buffer-name-history '("*scratch*" "10215102427-谢骐-1.md" "0.md" "2.1.el" "2.el" "*ielm*" "init.el"))
